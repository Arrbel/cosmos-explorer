version: '3.8'

services:
  # 前端应用
  cosmos-explorer:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    image: cosmos-explorer:latest
    container_name: cosmos-explorer-app
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cosmos-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cosmos.rule=Host(`cosmos.yourdomain.com`)"
      - "traefik.http.routers.cosmos.tls=true"
      - "traefik.http.routers.cosmos.tls.certresolver=letsencrypt"

  # 反向代理（可选）
  nginx-proxy:
    image: nginx:alpine
    container_name: cosmos-nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - cosmos-explorer
    restart: unless-stopped
    networks:
      - cosmos-network

  # 监控（可选）
  prometheus:
    image: prom/prometheus:latest
    container_name: cosmos-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - cosmos-network

networks:
  cosmos-network:
    driver: bridge

volumes:
  prometheus_data:
